name: Terraform Pipeline

on:
  push:
    paths:
      - 'tf/mgmt/**'
  
  pull_request:
    paths:
      - 'tf/mgmt/**'

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Fmt
        run: terraform fmt -recursive tf/mgmt

      - name: Commit and Push Format Changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add .
            git commit -m "Auto-format: fix Terraform style [ci skip]"
            git push
          else
            echo "No formatting changes to commit."
          fi

      - name: Terraform Validate
        run: terraform validate tf/mgmt

      - name: TFSec Scan
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          tfsec_version: latest
          args: --no-color tf/mgmt

      - name: Terraform Plan
        run: terraform plan -no-color -input=false tf/mgmt

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan 
    
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: production
    
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init tf/mgmt

      - name: Terraform Plan
        run: terraform plan -no-color -input=false tf/mgmt

      - name: Terraform Apply
        run: terraform apply -auto-approve tf/mgmt

